# Optimized Dockerfile for Render.com Deployment
# UPSC Current Affairs FastAPI Backend
# Optimized for: Fast cold starts, minimal size (~400MB), Render free tier

# Use Python 3.13 slim image (smallest official Python image)
FROM python:3.13-slim

# Set environment variables for optimal performance and security
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PORT=8000

# Create app directory
WORKDIR /app

# Install ONLY essential system dependencies (no Chrome/Selenium)
# Minimal dependencies for newspaper3k, trafilatura, and HTTP operations
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Essential utilities
    curl \
    ca-certificates \
    # Required for newspaper3k and lxml
    libxml2 \
    libxslt1.1 \
    # Required for some Python packages
    gcc \
    g++ \
    libxml2-dev \
    libxslt1-dev \
    # Clean up to reduce image size
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# Copy requirements first for better Docker layer caching
COPY requirements.txt .

# Install Python dependencies with optimizations
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    # Download NLTK data for newspaper3k
    python -c "import nltk; nltk.download('punkt', quiet=True); nltk.download('punkt_tab', quiet=True)" && \
    # Remove pip cache and temp files
    rm -rf /root/.cache/pip && \
    rm -rf /tmp/*

# Copy application code
COPY . .

# Create non-root user for security (Render best practice)
RUN groupadd -r appuser && \
    useradd -r -g appuser appuser && \
    # Create necessary directories
    mkdir -p /app/logs /app/cache /app/temp && \
    # Set permissions
    chown -R appuser:appuser /app && \
    chmod -R 755 /app

# Switch to non-root user
USER appuser

# Expose port (Render automatically binds to PORT env variable)
EXPOSE ${PORT}

# Health check for Render monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT}/api/health || exit 1

# Optimized startup command for Render
# Single worker is optimal for Render free tier (512MB RAM)
CMD uvicorn app.main:app \
    --host 0.0.0.0 \
    --port ${PORT} \
    --workers 1 \
    --access-log \
    --log-level info \
    --timeout-keep-alive 75
